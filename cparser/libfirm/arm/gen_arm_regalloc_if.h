/**
 * @file
 * @brief Contains additional external requirements defs for external includes.
 * @note   DO NOT EDIT THIS FILE, your changes will be lost.
 *         Edit ./ir/be/arm/arm_spec.pl instead.
 *         created by: ./ir/be/scripts/generate_regalloc_if.pl ./ir/be/arm/arm_spec.pl build/gen/ir/be/arm
 * @date   Wed Jul 10 12:01:46 2024
 */
#ifndef FIRM_BE_ARM_GEN_ARM_REGALLOC_IF_H
#define FIRM_BE_ARM_GEN_ARM_REGALLOC_IF_H

#include "bearch.h"

/** global register indices for arm registers */
enum reg_indices {
	REG_FL,
	REG_F0,
	REG_F1,
	REG_F2,
	REG_F3,
	REG_F4,
	REG_F5,
	REG_F6,
	REG_F7,
	REG_R0,
	REG_R1,
	REG_R2,
	REG_R3,
	REG_R4,
	REG_R5,
	REG_R6,
	REG_R7,
	REG_R8,
	REG_R9,
	REG_R10,
	REG_R11,
	REG_R12,
	REG_SP,
	REG_LR,
	REG_PC,

	N_ARM_REGISTERS
};

/** local register indices for arm registers */
enum {
	REG_FLAGS_FL,
};

enum {
	REG_FPA_F0,
	REG_FPA_F1,
	REG_FPA_F2,
	REG_FPA_F3,
	REG_FPA_F4,
	REG_FPA_F5,
	REG_FPA_F6,
	REG_FPA_F7,
};

enum {
	REG_GP_R0,
	REG_GP_R1,
	REG_GP_R2,
	REG_GP_R3,
	REG_GP_R4,
	REG_GP_R5,
	REG_GP_R6,
	REG_GP_R7,
	REG_GP_R8,
	REG_GP_R9,
	REG_GP_R10,
	REG_GP_R11,
	REG_GP_R12,
	REG_GP_SP,
	REG_GP_LR,
	REG_GP_PC,
};


/** number of registers in arm register classes. */
enum {
	N_arm_flags_REGS = 1,
	N_arm_fpa_REGS = 8,
	N_arm_gp_REGS = 16,

};

enum {
	CLASS_arm_flags,
	CLASS_arm_fpa,
	CLASS_arm_gp,
	N_ARM_CLASSES = 3
};

extern const arch_register_req_t arm_class_reg_req_flags;
extern const arch_register_req_t arm_single_reg_req_flags_fl;
extern const arch_register_req_t arm_class_reg_req_fpa;
extern const arch_register_req_t arm_single_reg_req_fpa_f0;
extern const arch_register_req_t arm_single_reg_req_fpa_f1;
extern const arch_register_req_t arm_single_reg_req_fpa_f2;
extern const arch_register_req_t arm_single_reg_req_fpa_f3;
extern const arch_register_req_t arm_single_reg_req_fpa_f4;
extern const arch_register_req_t arm_single_reg_req_fpa_f5;
extern const arch_register_req_t arm_single_reg_req_fpa_f6;
extern const arch_register_req_t arm_single_reg_req_fpa_f7;
extern const arch_register_req_t arm_class_reg_req_gp;
extern const arch_register_req_t arm_single_reg_req_gp_r0;
extern const arch_register_req_t arm_single_reg_req_gp_r1;
extern const arch_register_req_t arm_single_reg_req_gp_r2;
extern const arch_register_req_t arm_single_reg_req_gp_r3;
extern const arch_register_req_t arm_single_reg_req_gp_r4;
extern const arch_register_req_t arm_single_reg_req_gp_r5;
extern const arch_register_req_t arm_single_reg_req_gp_r6;
extern const arch_register_req_t arm_single_reg_req_gp_r7;
extern const arch_register_req_t arm_single_reg_req_gp_r8;
extern const arch_register_req_t arm_single_reg_req_gp_r9;
extern const arch_register_req_t arm_single_reg_req_gp_r10;
extern const arch_register_req_t arm_single_reg_req_gp_r11;
extern const arch_register_req_t arm_single_reg_req_gp_r12;
extern const arch_register_req_t arm_single_reg_req_gp_sp;
extern const arch_register_req_t arm_single_reg_req_gp_lr;
extern const arch_register_req_t arm_single_reg_req_gp_pc;


extern const arch_register_t arm_registers[N_ARM_REGISTERS];

extern arch_register_class_t arm_reg_classes[N_ARM_CLASSES];

void arm_register_init(void);

#endif
