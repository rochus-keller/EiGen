#ifndef _LIST_
#define _LIST_

// Generated by Oberon+ IDE (Mono) 0.9.106 on 2024-07-13T01:26:30

#include "OBX.Runtime.h"
#include "Benchmark.h"

// Declaration of module List

struct List$Element$Class$;
struct List$Element;
struct List$List$Class$;
struct List$List;
struct List$Element {
    struct List$Element$Class$* class$;
    int32_t val;
    struct List$Element * next;
};

extern void List$Element$init$(struct List$Element*);
struct List$List {
    struct List$List$Class$* class$;
};

extern void List$List$init$(struct List$List*);
int32_t List$Element$length(void* this);
struct List$Element * List$List$makeList(void* this, int32_t length);
uint8_t List$List$isShorterThan(void* this, struct List$Element * x, struct List$Element * y);
struct List$Element * List$List$tail(void* this, struct List$Element * x, struct List$Element * y, struct List$Element * z);
struct List$Element * List$createElem(int32_t val);
struct List$List * List$create();
struct Benchmark$Result * List$List$benchmark(void* this);
uint8_t List$List$verifyResult(void* this, struct Benchmark$Result * result);
struct List$Element$Class$ {
    struct List$Element$Class$* super$;
    int32_t (*length)(void* this);
};
extern struct List$Element$Class$ List$Element$class$;

struct List$List$Class$ {
    struct Benchmark$Benchmark$Class$* super$;
    struct Benchmark$Result * (*benchmark)(void* this);
    uint8_t (*verifyResult)(void* this, struct Benchmark$Result * result);
    uint8_t (*innerBenchmarkLoop)(void* this, int32_t innerIterations);
    struct List$Element * (*makeList)(void* this, int32_t length);
    uint8_t (*isShorterThan)(void* this, struct List$Element * x, struct List$Element * y);
    struct List$Element * (*tail)(void* this, struct List$Element * x, struct List$Element * y, struct List$Element * z);
};
extern struct List$List$Class$ List$List$class$;

extern void List$init$(void);
extern OBX$Cmd List$cmd$(const char* name);
#endif
