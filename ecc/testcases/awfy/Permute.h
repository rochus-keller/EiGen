#ifndef _PERMUTE_
#define _PERMUTE_

// Generated by Oberon+ IDE (Mono) 0.9.106 on 2024-07-13T01:26:30

#include "OBX.Runtime.h"
#include "Benchmark.h"

// Declaration of module Permute

struct Permute$Permute$Class$;
struct Permute$Permute;
struct Permute$Permute {
    struct Permute$Permute$Class$* class$;
    int32_t count;
    struct OBX$Array$1 v;
};

extern void Permute$Permute$init$(struct Permute$Permute*);
struct Permute$Permute * Permute$create();
struct Benchmark$Result * Permute$Permute$benchmark(void* this);
void Permute$Permute$permute(void* this, int32_t n);
void Permute$Permute$swap(void* this, int32_t i, int32_t j);
void Permute$swap(int32_t * i, int32_t * j);
uint8_t Permute$Permute$verifyResult(void* this, struct Benchmark$Result * result);
struct Permute$Permute$Class$ {
    struct Benchmark$Benchmark$Class$* super$;
    struct Benchmark$Result * (*benchmark)(void* this);
    uint8_t (*verifyResult)(void* this, struct Benchmark$Result * result);
    uint8_t (*innerBenchmarkLoop)(void* this, int32_t innerIterations);
    void (*permute)(void* this, int32_t n);
    void (*swap)(void* this, int32_t i, int32_t j);
};
extern struct Permute$Permute$Class$ Permute$Permute$class$;

extern void Permute$init$(void);
extern OBX$Cmd Permute$cmd$(const char* name);
#endif
