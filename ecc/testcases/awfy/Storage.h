#ifndef _STORAGE_
#define _STORAGE_

// Generated by Oberon+ IDE (Mono) 0.9.106 on 2024-07-13T01:26:30

#include "OBX.Runtime.h"
#include "som.Random.h"
#include "Benchmark.h"

// Declaration of module Storage

struct Storage$Storage$Class$;
struct Storage$Storage;
struct Storage$Storage {
    struct Storage$Storage$Class$* class$;
    int32_t count;
};

extern void Storage$Storage$init$(struct Storage$Storage*);
struct Storage$Storage * Storage$create();
struct Benchmark$Result * Storage$Storage$benchmark(void* this);
struct OBX$Array$1 Storage$Storage$buildTreeDepth(void* this, int32_t depth);
uint8_t Storage$Storage$verifyResult(void* this, struct Benchmark$Result * result);
struct Storage$Storage$Class$ {
    struct Benchmark$Benchmark$Class$* super$;
    struct Benchmark$Result * (*benchmark)(void* this);
    uint8_t (*verifyResult)(void* this, struct Benchmark$Result * result);
    uint8_t (*innerBenchmarkLoop)(void* this, int32_t innerIterations);
    struct OBX$Array$1 (*buildTreeDepth)(void* this, int32_t depth);
};
extern struct Storage$Storage$Class$ Storage$Storage$class$;

extern void Storage$init$(void);
extern OBX$Cmd Storage$cmd$(const char* name);
#endif
