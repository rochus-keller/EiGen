#ifndef _TOWERS_
#define _TOWERS_

// Generated by Oberon+ IDE (Mono) 0.9.106 on 2024-07-13T01:26:30

#include "OBX.Runtime.h"
#include "Benchmark.h"
#include "Out.h"

// Declaration of module Towers

struct Towers$TowersDisk$Class$;
struct Towers$TowersDisk;
struct Towers$Towers$Class$;
struct Towers$Towers;
struct Towers$TowersDisk {
    struct Towers$TowersDisk$Class$* class$;
    int32_t size;
    struct Towers$TowersDisk * next;
};

extern void Towers$TowersDisk$init$(struct Towers$TowersDisk*);
struct Towers$Towers {
    struct Towers$Towers$Class$* class$;
    int32_t movesDone;
    struct OBX$Array$1 piles;
};

extern void Towers$Towers$init$(struct Towers$Towers*);
struct Towers$Towers * Towers$create();
struct Towers$TowersDisk * Towers$createDisk(int32_t s);
void Towers$Towers$pushDisk(void* this, struct Towers$TowersDisk * disk, int32_t pile);
struct Towers$TowersDisk * Towers$Towers$popDiskFrom(void* this, int32_t pile);
void Towers$Towers$moveTopDisk(void* this, int32_t fromPile, int32_t toPile);
void Towers$Towers$buildTowerAt(void* this, int32_t pile, int32_t disks);
void Towers$Towers$moveDisks(void* this, int32_t disks, int32_t fromPile, int32_t toPile);
struct Benchmark$Result * Towers$Towers$benchmark(void* this);
uint8_t Towers$Towers$verifyResult(void* this, struct Benchmark$Result * result);
struct Towers$TowersDisk$Class$ {
    struct Towers$TowersDisk$Class$* super$;
};
extern struct Towers$TowersDisk$Class$ Towers$TowersDisk$class$;

struct Towers$Towers$Class$ {
    struct Benchmark$Benchmark$Class$* super$;
    struct Benchmark$Result * (*benchmark)(void* this);
    uint8_t (*verifyResult)(void* this, struct Benchmark$Result * result);
    uint8_t (*innerBenchmarkLoop)(void* this, int32_t innerIterations);
    void (*pushDisk)(void* this, struct Towers$TowersDisk * disk, int32_t pile);
    struct Towers$TowersDisk * (*popDiskFrom)(void* this, int32_t pile);
    void (*moveTopDisk)(void* this, int32_t fromPile, int32_t toPile);
    void (*buildTowerAt)(void* this, int32_t pile, int32_t disks);
    void (*moveDisks)(void* this, int32_t disks, int32_t fromPile, int32_t toPile);
};
extern struct Towers$Towers$Class$ Towers$Towers$class$;

extern void Towers$init$(void);
extern OBX$Cmd Towers$cmd$(const char* name);
#endif
